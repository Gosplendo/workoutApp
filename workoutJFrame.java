/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author wessl
 */
import java.io.*;
public class workoutJFrame extends javax.swing.JFrame {

    /**
     * Creates new form workoutJFrame
     */
    public workoutJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupTime = new javax.swing.ButtonGroup();
        GroupExercises = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        comboBoxMonth = new javax.swing.JComboBox<>();
        comboBoxDay = new javax.swing.JComboBox<>();
        lblMonth = new javax.swing.JLabel();
        lblDay = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        radio30 = new javax.swing.JRadioButton();
        radio60 = new javax.swing.JRadioButton();
        radio90 = new javax.swing.JRadioButton();
        lblExercises = new javax.swing.JLabel();
        chkNeck = new javax.swing.JCheckBox();
        chkTraps = new javax.swing.JCheckBox();
        chkShoulders = new javax.swing.JCheckBox();
        chkChest = new javax.swing.JCheckBox();
        chkBiceps = new javax.swing.JCheckBox();
        chkForearm = new javax.swing.JCheckBox();
        chkAbs = new javax.swing.JCheckBox();
        chkQuads = new javax.swing.JCheckBox();
        chkHamstring = new javax.swing.JCheckBox();
        chkUpperBack = new javax.swing.JCheckBox();
        chkLowerBack = new javax.swing.JCheckBox();
        chkCalves = new javax.swing.JCheckBox();
        txtNeck = new javax.swing.JTextField();
        txtTraps = new javax.swing.JTextField();
        txtShoulders = new javax.swing.JTextField();
        txtChest = new javax.swing.JTextField();
        txtForearm = new javax.swing.JTextField();
        txtBiceps = new javax.swing.JTextField();
        txtAbs = new javax.swing.JTextField();
        txtQuads = new javax.swing.JTextField();
        txtHamstrings = new javax.swing.JTextField();
        txtUpperBack = new javax.swing.JTextField();
        txtLowerBack = new javax.swing.JTextField();
        txtCalves = new javax.swing.JTextField();
        cmdLoad = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdNextDay = new javax.swing.JButton();
        txtFile = new javax.swing.JTextField();
        lblFile = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        comboBoxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February ", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        comboBoxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        lblMonth.setText("Month");

        lblDay.setText("Day");

        lblTime.setText("Time:");

        groupTime.add(radio30);
        radio30.setText("30 Min");

        groupTime.add(radio60);
        radio60.setText("60 Min");

        groupTime.add(radio90);
        radio90.setText("90 Min");

        lblExercises.setText("Exercises:");

        chkNeck.setText("Neck");

        chkTraps.setText("Traps");

        chkShoulders.setText("Shoulders");

        chkChest.setText("Chest");

        chkBiceps.setText("Biceps");

        chkForearm.setText("Forearm");

        chkAbs.setText("Abs");

        chkQuads.setText("Quads");

        chkHamstring.setText("Hamstrings");

        chkUpperBack.setText("Upper Back");

        chkLowerBack.setText("Lower Back");

        chkCalves.setText("Calves");

        txtNeck.setText("Dumbbell Shrugs");

        txtTraps.setText("Single-Arm Dumbbell Upright Row");

        txtShoulders.setText("Dips");

        txtChest.setText("Bench press");

        txtForearm.setText("Rickshaw Carry");

        txtBiceps.setText("Dumbbell Curls");

        txtAbs.setText("Sit-ups");

        txtQuads.setText("Dumbbell Lunges");

        txtHamstrings.setText("Romanian Deadlift");

        txtUpperBack.setText("Pull Aparts");

        txtLowerBack.setText("Front-to-Back-Shoulder Squeeze");

        txtCalves.setText("Calf Raise");

        cmdLoad.setText("Load");
        cmdLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdLoadMouseClicked(evt);
            }
        });
        cmdLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLoadActionPerformed(evt);
            }
        });

        cmdSave.setText("Save");
        cmdSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdSaveMouseClicked(evt);
            }
        });
        cmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveActionPerformed(evt);
            }
        });

        cmdNextDay.setText("Next Day");
        cmdNextDay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdNextDayMouseClicked(evt);
            }
        });
        cmdNextDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNextDayActionPerformed(evt);
            }
        });

        lblFile.setText("File Name (EXAMPLE: myWorkout.txt = myWorkout): ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkNeck)
                            .addComponent(chkShoulders)
                            .addComponent(chkChest)
                            .addComponent(chkBiceps)
                            .addComponent(chkForearm)
                            .addComponent(chkTraps)
                            .addComponent(lblTime))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(257, 257, 257)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMonth))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDay)
                                    .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(cmdNextDay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmdLoad)
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFile)
                                    .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNeck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTraps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtShoulders, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtChest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtForearm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtBiceps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(38, 38, 38)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(chkCalves)
                                                .addGap(69, 69, 69)
                                                .addComponent(txtCalves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(chkLowerBack)
                                                    .addComponent(chkUpperBack)
                                                    .addComponent(chkHamstring)
                                                    .addComponent(chkQuads)
                                                    .addComponent(chkAbs))
                                                .addGap(41, 41, 41)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtAbs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtQuads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtHamstrings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtUpperBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtLowerBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cmdSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radio30)
                        .addGap(18, 18, 18)
                        .addComponent(radio60)
                        .addGap(18, 18, 18)
                        .addComponent(radio90))
                    .addComponent(lblExercises))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(lblMonth)
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblTime)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radio30)
                            .addComponent(radio60)
                            .addComponent(radio90)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(lblDay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(lblExercises)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkNeck)
                    .addComponent(chkAbs)
                    .addComponent(txtNeck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAbs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTraps)
                    .addComponent(chkQuads)
                    .addComponent(txtTraps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkShoulders)
                    .addComponent(chkHamstring)
                    .addComponent(txtShoulders, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHamstrings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkChest)
                    .addComponent(chkUpperBack)
                    .addComponent(txtChest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUpperBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkBiceps)
                    .addComponent(chkLowerBack)
                    .addComponent(txtBiceps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLowerBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkForearm)
                    .addComponent(chkCalves)
                    .addComponent(txtForearm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCalves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(lblFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdSave)
                    .addComponent(cmdLoad)
                    .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdNextDay))
                .addGap(67, 67, 67))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        // TODO add your handling code here:
        int time= 0;
        int abs = 0;
        int biceps = 0;
        int calves = 0;
        int chest = 0;
        int forearm = 0;
        int hamstrings = 0;
        int lowerBack = 0;
        int neck = 0;
        int quad = 0;
        int shoulder = 0;
        int traps = 0;
        int upperBack = 0;
        int month = comboBoxMonth.getSelectedIndex();
        int day = comboBoxDay.getSelectedIndex();
        
        try {
            PrintWriter save = new PrintWriter(new FileWriter("C:\\Users\\wessl\\Documents\\exerciseFile" + comboBoxMonth.getSelectedIndex() + comboBoxDay.getSelectedIndex() + ".txt"));
            if (radio30.isSelected()) 
            {time = 30;}
            else if (radio60.isSelected())
            {time = 60;}
            else
            {time = 90;}
            save.println(month);
            save.println(day);
            save.println(time);
            if (chkAbs.isSelected())
            {abs = 1; }
            else
            {abs = 0;}
            if (chkBiceps.isSelected())
            {biceps = 1; }
            else
            {biceps = 0;}
            if (chkCalves.isSelected())
            {calves = 1; }
            else
            {calves = 0;}
            if (chkChest.isSelected())
            {chest = 1; }
            else
            {chest = 0;}
            if (chkForearm.isSelected())
            {forearm = 1; }
            else
            {forearm = 0;}
            if (chkHamstring.isSelected())
            {hamstrings = 1; }
            else
            {hamstrings = 0;}
            if (chkLowerBack.isSelected())
            {lowerBack = 1; }
            else
            {lowerBack = 0;}
            if (chkNeck.isSelected())
            {neck = 1; }
            else
            {neck = 0;}
            if (chkQuads.isSelected())
            {quad = 1; }
            else
            {quad = 0;}
            if (chkShoulders.isSelected())
            {shoulder = 1; }
            else
            {shoulder = 0;}
            if (chkTraps.isSelected())
            {traps = 1; }
            else
            {traps = 0;}
            if (chkUpperBack.isSelected())
            {upperBack = 1; }
            else
            {upperBack = 0;}
           
            save.println(abs);
            save.println(biceps);
            save.println(calves);
            save.println(chest);
            save.println(forearm);
            save.println(hamstrings);
            save.println(lowerBack);
            save.println(neck);
            save.println(quad);
            save.println(shoulder);
            save.println(traps);
            save.println(upperBack);
            save.close();
            txtFile.setText("Successfully Saved");
            } catch(FileNotFoundException e){
                txtFile.setText("That is not a valid File name");
                    }catch (IOException e){
                        txtFile.setText("Error writing to file");
                    }
        
        
       
        
      
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void cmdSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdSaveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdSaveMouseClicked

    private void cmdNextDayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdNextDayMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdNextDayMouseClicked

    private void cmdLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdLoadMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdLoadMouseClicked

    private void cmdNextDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNextDayActionPerformed
        // TODO add your handling code here:
         //Time Code
            int time;
            if (radio30.isSelected())
            {time = 30;}
            else if (radio60.isSelected())
            {time = 60;}
            else 
            {time = 90;}
            
            //accumulator for amount of workouts 
            int workoutAmount = 0;
            if (chkNeck.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkTraps.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkShoulders.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkChest.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkBiceps.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkForearm.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkAbs.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkQuads.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkHamstring.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkUpperBack.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkLowerBack.isSelected())
            {workoutAmount = workoutAmount + 1;}
            if (chkCalves.isSelected())
            {workoutAmount = workoutAmount + 1;}
            
            if (time == 30)
            {radio90.setSelected(true);}
            else if (time == 90)
            {radio30.setSelected(true);}
            else
            {radio30.setSelected(true);}
            
            if(workoutAmount < 6)
            {  if (chkAbs.isSelected())
                {chkAbs.setSelected(false);}
               else
                {chkAbs.setSelected(true);}
                if (chkNeck.isSelected())
                {chkNeck.setSelected(false);}
               else
                {chkNeck.setSelected(true);}
                if (chkTraps.isSelected())
                {chkTraps.setSelected(false);}
               else
                {chkTraps.setSelected(true);}
                if (chkQuads.isSelected())
                {chkQuads.setSelected(false);}
               else
                {chkQuads.setSelected(true);}
                if (chkChest.isSelected())
                {chkChest.setSelected(false);}
               else
                {chkChest.setSelected(true);}
                if (chkCalves.isSelected())
                {chkCalves.setSelected(false);}
               else
                {chkCalves.setSelected(true);}
            }
            else if(workoutAmount >= 6 )
            {
                if (chkBiceps.isSelected())
                {chkBiceps.setSelected(false);}
               else
                {chkBiceps.setSelected(true);}
                if (chkForearm.isSelected())
                {chkForearm.setSelected(false);}
               else
                {chkForearm.setSelected(true);}
                if (chkHamstring.isSelected())
                {chkHamstring.setSelected(false);}
               else
                {chkHamstring.setSelected(true);}
                if (chkLowerBack.isSelected())
                {chkLowerBack.setSelected(false);}
               else
                {chkLowerBack.setSelected(true);}
                if (chkUpperBack.isSelected())
                {chkUpperBack.setSelected(false);}
               else
                {chkUpperBack.setSelected(true);}
               
            }
            
            int month, day;
            month= comboBoxMonth.getSelectedIndex();
            day = comboBoxDay.getSelectedIndex();
                       
            if (day == (comboBoxDay.getItemCount() - 1))
            { month = month + 1; 
             day= 0;}
         
             
            comboBoxMonth.setSelectedIndex(month);
            comboBoxDay.setSelectedIndex(day);
            
            
            
            //
    }//GEN-LAST:event_cmdNextDayActionPerformed

    private void cmdLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLoadActionPerformed
        // TODO add your handling code here:
        
        try{
        BufferedReader in = new BufferedReader(new FileReader("C:\\Users\\\\wessl\\Documents\\exerciseFile" +comboBoxMonth.getSelectedIndex() + comboBoxDay.getSelectedIndex()+".txt"));
        int time= 0;
        int abs = 0;
        int biceps = 0;
        int calves = 0;
        int chest = 0;
        int forearm = 0;
        int hamstrings = 0;
        int lowerBack = 0;
        int neck = 0;
        int quad = 0;
        int shoulder = 0;
        int traps = 0;
        int upperBack = 0;
        int month = 0;
        int day = 0;
        month =Integer.parseInt(in.readLine());
        comboBoxMonth.setSelectedIndex(month);
        day = Integer.parseInt(in.readLine());
        comboBoxDay.setSelectedIndex(day);
        time = Integer.parseInt(in.readLine());
        if (time==30 )
        { radio30.setSelected(true);}
        else if (time ==60)
        {radio60.setSelected(true);}
        else
        {radio90.setSelected(true);}
     
        
        abs = Integer.parseInt(in.readLine());
        if (abs == 1)
        {chkAbs.setSelected(true);}
        else
        {chkAbs.setSelected(false);}
        biceps = Integer.parseInt(in.readLine());
        if (biceps == 1)
        {chkBiceps.setSelected(true);}
        else
        {chkBiceps.setSelected(false);}
        calves = Integer.parseInt(in.readLine());
        if (calves == 1)
        {chkCalves.setSelected(true);}
        else
        {chkCalves.setSelected(false);}
        chest = Integer.parseInt(in.readLine());
        if (chest == 1)
        {chkChest.setSelected(true);}
        else
        {chkChest.setSelected(false);}
        forearm = Integer.parseInt(in.readLine());
        if (forearm == 1)
        {chkForearm.setSelected(true);}
        else
        {chkForearm.setSelected(false);}
        hamstrings = Integer.parseInt(in.readLine());
        if (hamstrings == 1)
        {chkHamstring.setSelected(true);}
        else
        {chkHamstring.setSelected(false);}
        lowerBack = Integer.parseInt(in.readLine());
        if (lowerBack == 1)
        {chkLowerBack.setSelected(true);}
        else
        {chkLowerBack.setSelected(false);}
        neck = Integer.parseInt(in.readLine());
        if (neck == 1)
        {chkNeck.setSelected(true);}
        else
        {chkNeck.setSelected(false);}
        quad = Integer.parseInt(in.readLine());
        if ( quad == 1)
        {chkQuads.setSelected(true);}
        else
        {chkQuads.setSelected(false);}
        shoulder = Integer.parseInt(in.readLine());
        if (shoulder == 1)
        {chkShoulders.setSelected(true);}
        else
        {chkShoulders.setSelected(false);}
        traps =Integer.parseInt(in.readLine());
        if (traps == 1)
        {chkTraps.setSelected(true);}
        else
        {chkTraps.setSelected(false);}
        upperBack = Integer.parseInt(in.readLine());
        if (upperBack == 1)
        {chkUpperBack.setSelected(true);}
        else
        {chkUpperBack.setSelected(false);}
        
        }catch(FileNotFoundException e)
        {txtFile.setText("Incorrect file name");}
        catch(IOException e){txtFile.setText("Error loading File");}
    }//GEN-LAST:event_cmdLoadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        new workoutJFrame().setVisible(true);
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(workoutJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(workoutJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(workoutJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(workoutJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new workoutJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GroupExercises;
    private javax.swing.JCheckBox chkAbs;
    private javax.swing.JCheckBox chkBiceps;
    private javax.swing.JCheckBox chkCalves;
    private javax.swing.JCheckBox chkChest;
    private javax.swing.JCheckBox chkForearm;
    private javax.swing.JCheckBox chkHamstring;
    private javax.swing.JCheckBox chkLowerBack;
    private javax.swing.JCheckBox chkNeck;
    private javax.swing.JCheckBox chkQuads;
    private javax.swing.JCheckBox chkShoulders;
    private javax.swing.JCheckBox chkTraps;
    private javax.swing.JCheckBox chkUpperBack;
    private javax.swing.JButton cmdLoad;
    private javax.swing.JButton cmdNextDay;
    private javax.swing.JButton cmdSave;
    private javax.swing.JComboBox<String> comboBoxDay;
    private javax.swing.JComboBox<String> comboBoxMonth;
    private javax.swing.ButtonGroup groupTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDay;
    private javax.swing.JLabel lblExercises;
    private javax.swing.JLabel lblFile;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblTime;
    private javax.swing.JRadioButton radio30;
    private javax.swing.JRadioButton radio60;
    private javax.swing.JRadioButton radio90;
    private javax.swing.JTextField txtAbs;
    private javax.swing.JTextField txtBiceps;
    private javax.swing.JTextField txtCalves;
    private javax.swing.JTextField txtChest;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtForearm;
    private javax.swing.JTextField txtHamstrings;
    private javax.swing.JTextField txtLowerBack;
    private javax.swing.JTextField txtNeck;
    private javax.swing.JTextField txtQuads;
    private javax.swing.JTextField txtShoulders;
    private javax.swing.JTextField txtTraps;
    private javax.swing.JTextField txtUpperBack;
    // End of variables declaration//GEN-END:variables
}
